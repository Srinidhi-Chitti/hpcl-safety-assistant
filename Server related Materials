SERVER : Servers are powerful computers or software systems that provide services, data, or resources to other computers (called clients) over a network. They handle tasks like hosting websites, storing files, running applications, or managing databases. Servers are essential for communication and data exchange in both local and internet-based systems. A server is a real, tangible hardware machine designed to run server software and provide services to clients. It includes components like a processor, RAM, storage, and network interfacesâ€”just like a regular computerâ€”but is usually more powerful and built for continuous, heavy-duty operation. 
Key Features of a Physical Server: 
â€¢	Dedicated Hardware: Not shared with other systems. 
â€¢	High Performance: Supports large workloads and multiple users. 
â€¢	Used For: 
o	Hosting websites 
o	Managing databases 
o	Running enterprise applications 
o	Virtualization (hosting multiple virtual machines) 

Pros and Cons of Servers:  
Servers are the backbone of most modern digital infrastructure. Whether you're running a website, database, cloud app, or enterprise system servers power it all.  
Advantages of Servers: 
Centralized Management: 	All data and applications are stored and managed in one place, making updates, security, and control easier. 
High Availability: 	Enterprise servers are designed for 24/7 uptime, with features like RAID, redundant power, and failover. 
Scalability: 	Resources (CPU, RAM, storage) can be expanded to meet growing demands. 
Security: 	Centralized security policies, firewalls, and controlled access help protect sensitive data. 
Resource Sharing: 	Multiple clients or users can access shared resources like files, printers, and internet. 
Backup & Recovery: 	Servers often support automated backup and disaster recovery plans. 
Disadvantages of Servers: 
â€¢	 
   High Cost:                     Enterprise servers and their maintenance can be expensive.    
   Complex Setup        Requires technical expertise for configuration, updates, and         
   and Maintenance:  troubleshooting. 
Hardware Dependency: 	Physical servers can fail, requiring replacement or repair downtime. 
 
Security Risks: 	Servers are common targets for cyberattacks; need continuous monitoring and patching. 
 
Limited Mobility: 	Physical servers are stationary and not ideal for highly mobile or cloud-first environments. 
 
Server vs Others 
A server is a powerful, always-on machine designed to provide services and resources to multiple clients over a network, making it fundamentally different from other computing devices like desktops, laptops, cloud systems, and virtual machines. Unlike desktops, which are built for individual tasks like browsing or document editing, servers use high-end components like ECC RAM, RAID storage, and redundant power supplies for continuous operation and reliability. Compared to laptops, servers are stationary and optimized for performance and stability, while laptops are portable and battery-powered, better suited for personal or mobile use. In contrast to cloud computing, where virtual servers are hosted by third-party providers and accessed over the internet, physical servers offer more control, security, and are ideal for organizations with privacy or compliance needs, though cloud platforms excel in flexibility, scalability, and cost-efficiency. Finally, virtual machines (VMs) differ from physical servers in that they are software-based systems running on hypervisors, allowing multiple isolated OS environments to run on a single server, making them useful for testing, development, or resource-efficient deployments. Overall, servers stand out for their robustness and centralized service capabilities, while each alternative serves specific personal, virtualized, or cloud-based needs. 
 
Types of Servers 
Servers come in different types based on the services they offer. Below are some common server types: 
ðŸ”¸ Web Server 
â€¢	Hosts websites and delivers web pages via browsers. 
â€¢	Examples: Apache, Nginx. 

File Server 
â€¢	Stores, manages, and provides access to files over a network. 
â€¢	Examples: Windows File Server, Samba. 
ðŸ”¸ Database Server 
â€¢	Handles data storage, management, and querying. 
â€¢	Examples: MySQL, Oracle. 
ðŸ”¸ Mail Server 
â€¢	Manages the sending, receiving, and storage of emails. 
â€¢	Examples: Microsoft Exchange, Postfix. 
ðŸ”¸ DNS Server 
â€¢	Converts domain names into IP addresses. 
â€¢	Examples: BIND, Microsoft DNS Server. 
ðŸ”¸ Application Server 
â€¢	Runs applications and handles the backend logic for client programs. 
â€¢	Examples: WebLogic, JBoss. 
ðŸ”¸ Proxy Server 
â€¢	Acts as an intermediary between clients and other servers to enhance security and speed. 
ðŸ”¸ FTP Server 
â€¢	Transfers files between systems using File Transfer Protocol. 
â€¢	Example: FileZilla Server. 
 
Server Configuration and Types: 
Server configurations refer to the way hardware, software, and network components are arranged and managed in a server environment. These configurations define how a server performs, how it is used, and how it integrates with other systems. Below are the major types of server configurations: 
1. Standalone Server Configuration 
â€¢	A single physical server running independently. 
â€¢	Handles a specific role like file storage, web hosting, or database management. 
â€¢	Best for: Small businesses or test environments. 
2. Clustered Server Configuration 
â€¢	Multiple servers (nodes) connected to function as one system. 
â€¢	If one server fails, another takes over seamlessly. 
â€¢	Best for: Enterprise-level applications, mission-critical systems. 
3. Virtualized Server Configuration 
â€¢	Uses a hypervisor to divide a physical server into multiple virtual machines (VMs). 
â€¢	Each VM can run its own OS and applications. 
â€¢	Best for: Data centers, cloud services, testing environments. 
4. Rack Server Configuration 
â€¢	Servers mounted in a standard rack cabinet (U-based units). 
â€¢	Best for: Scalable server environments. 
5. Cloud Server Configuration 
â€¢	Hosted on cloud platforms (e.g., AWS, Azure, GCP). 
â€¢	Best for: On-demand applications, startups, remote services. 
6. RAID Configurations in Storage 
â€¢	Combines multiple disks for redundancy and/or performance. 
â€¢	Types include: 
o	RAID 0 â€“ Striping for performance 
o	RAID 1 â€“ Mirroring for redundancy 
o	RAID 5/6 â€“ Striping with parity for fault tolerance 
o	RAID 10 â€“ Combination of RAID 1 and 0 
â€¢	Best for: Data protection and performance optimization. 
7. Hyper-Converged Configuration (HCI) 
â€¢	Combines compute, storage, and networking in a single unified system. 
â€¢	Uses virtualization and software-defined storage. 
â€¢	Easy to manage, scalable, and efficient. 
â€¢	Best for: Private clouds and modern data centers. 
 
Server Modes â€“ 
â€¢	Standalone Mode 
In Standalone Mode, the server functions independently without being connected to any network domain. It doesn't rely on centralized services for authentication or management. This mode is simple to set up and is suitable for small networks, local applications, or testing environments where only basic services are needed. However, it lacks centralized control and scalability. 
â€¢	Domain Mode 
Domain Mode allows the server to be part of a domain, typically managed by services like Active Directory (AD). In this configuration, the server can authenticate users, apply group policies, and manage resources across multiple systems in a centralized manner. This is commonly used in enterprises where user management, security, and access control need to be standardized and enforced across the organization. 
â€¢	Workgroup Mode 
Workgroup Mode is a peer-to-peer network configuration where each server or system maintains its own user accounts and permissions. There is no central control, making it easier to set up but less secure and manageable as the network grows. This mode is often found in small offices or home setups with limited users and devices. 
â€¢	Virtual Server Mode 
In this mode, the server operates as a Virtual Machine (VM) inside a hypervisor like VMware ESXi, Hyper-V, or Oracle VM. Virtual servers are flexible, cost-effective, and easy to manage. They allow for resource optimization, easy backups, and quick deployment. Multiple VMs can run on a single physical server, each isolated and running its own operating system. 
â€¢	Cluster Mode 
Cluster Mode involves two or more servers working together as a unified system to ensure high availability. If one server fails, another in the cluster immediately takes over, preventing downtime. This is essential for mission-critical services like banking systems, healthcare servers, and enterprise databases that require continuous uptime. 
â€¢	Maintenance Mode 
Maintenance Mode is used when a server needs to be taken temporarily offline for tasks like patching, backups, or troubleshooting. While in this mode, the server is isolated from active workloads to avoid disruptions. Itâ€™s commonly used in virtualization platforms and clustered systems to safely perform updates or hardware replacements. 
 
 
 
 
Redundancy in Servers 
Redundancy enhances reliability by duplicating critical components to prevent downtime. 
â€¢	Power Supply Redundancy: Dual PSUs and UPS systems. 
â€¢	Network Redundancy: Multiple NICs or distinct uplinks. 
â€¢	Hardware Redundancy: Backup CPUs, memory, and power circuits. 
â€¢	Server Clustering: Groups of servers act as one; if one fails, others continue the service. 
 
RAID Configurations in Servers 
RAID (Redundant Array of Independent Disks) combines multiple drives for performance enhancement and/or fault tolerance. 
ðŸ”¹ RAID 0 (Striping) 
RAID 0, also known as striping, is a RAID configuration that splits (or stripes) data evenly across two or more disks. It focuses on performanceâ€”not redundancy. 
â€¢	Data is broken into blocks and written across all disks in the array. 
â€¢	Example: With 2 disks, block 1 goes to Disk A, block 2 to Disk B, block 3 to Disk A again, and so on. 
â€¢	All disks work simultaneously, which speeds up read/write operations. 
ðŸ”¹ RAID 1 (Mirroring)  
RAID 1, also called mirroring, is a RAID configuration where the same data is copied identically to two or more disks. It is designed for data redundancy and reliability, not speed. 
â€¢	Every piece of data written to one disk is simultaneously written to another. 
â€¢	If one disk fails, the other continues running without data loss. 
ðŸ”¹ RAID 5 (Block-Level Striping with Distributed Parity 
RAID 5 is a popular RAID configuration that uses block-level striping like RAID 4 but distributes parity information across all disks instead of dedicating one disk for parity. This provides a good balance between performance, fault tolerance, and storage efficiency. 
â€¢	Data is split into blocks and striped across multiple disks. 
â€¢	Parity blocks are also striped and rotated across the disks (used to recover lost data if one disk fails). 
â€¢	If a disk fails, the system can rebuild data using the parity and the remaining disks. 
ðŸ”¹ RAID 6 (Block-Level Striping with Double Distributed Parity)  
RAID 6 is an advanced RAID configuration similar to RAID 5, but it stores two sets of parity data across all disks. This allows it to survive two simultaneous disk failures, providing higher fault tolerance. 
â€¢	Data is striped at the block level across all disks. 
â€¢	Two different parity blocks (P and Q) are distributed across all drives using complex algorithms. 
â€¢	If up to 2 drives fail, data can still be reconstructed using the dual parity. 
 
 Key Components of Server Hardware: 
1.	Processor (CPU) 
  â€¢ The brain of the server. 
  â€¢ Server-grade CPUs like Intel Xeon or AMD EPYC are built for       multitasking, virtualization, and efficiency under load. 
2.	Memory (RAM) 
â€¢ Temporarily stores active data and processes. 
â€¢	Servers often have large RAM capacities (64GBâ€“1TB+). 
3.	Storage (HDDs or SSDs) 
HDDs â€“ More storage, cheaper, slower. 
SSDs â€“ Faster, more reliable, costlier. 
4.	Motherboard : The central board that connects all hardware components. 
â€¢	Server motherboards support: 
â€¢	Multiple CPUs 
â€¢	High RAM capacities 
â€¢	Redundant power and network systems 
â€¢	Advanced I/O ports and expansion slots 
5.	Power Supply Units (PSU): Supplies electricity to all components. 
6.	Network Interface Cards (NICs): Allow servers to connect to networks. 
7.	RAID Controller 
8.	Cooling Systems 
9.	Chassis (Server Case) 
10.	Expansion Cards & Buses 
 
ðŸ”¹ Virtualization in Servers 
Virtualization is the process of creating a virtual representation of hardware such as server, storage, network or other physical machines. It supports multiple copies of virtual machines (VMs) to execute on one physical machine each with their own operating system and programs. 
Virtualizations uses special software known as hypervisor, to create many virtual computers (cloud instances) on one physical computer. The Virtual Machines behave like actual computers but use the same physical machine. 
Virtual Machines (Cloud Instances) 
After installing virtualization software on your computer, you can set up one or more virtual machines. The Virtual machines are similar to other applications on your computer. The Actual computer isâ€¯"Host"â€¯and the Virtual Computers are "Guests".â€¯You can have several guests on a single host, and each guests can have its own operating system, which may be the same or different from the host. 

As a user you can see that every virtual machine behaves as a normal computer. The new OS running on virtual hardware resources is collectively called Virtual Machine (VM). It has its own configurations, programs, and settings. The resources, such as the processor (CPU), Memory (RAM), and storage, are all accessed by the virtual machines, but they appear and function exactly like they would in a real computer. You can update or modify the virtual machine's operating system and applications without touching the original computer. 
 
Hypervisors 
A hypervisor is the software that gets virtualization to work. It serves as an intermediary between the physical computer and the virtual machines. The hypervisor controls the virtual machines' use of the physical resources (such as the CPU and memory) of the host computer. 
For instance, if one virtual machine wants additional computing capability, it requests it from the hypervisor. The hypervisor ensures the request is forwarded to the physical hardware, and it's accomplished. 
There exist two categories of hypervisors: 
Type 1 Hypervisor (Bare-Metal Hypervisor): 
â€¢	The hypervisor is installed directly onto the computer hardware, without an operating system sitting in between. 
â€¢	It is highly efficient as it has a direct access to the resources of the computer. 
Type 2 Hypervisor: 
â€¢	It is run over an installed operating system (such as Windows or macOS). 
â€¢	It's employed when you need to execute more than one operating system on one machine. 
 
ðŸ”¸ Oracle VM 
â€¢	A virtualization platform using Xen Hypervisor. 
â€¢	Components: 
o	Oracle VM Server (runs VMs) 
o	Oracle VM Manager (web interface) 
â€¢	Used to run multiple OSes, especially Oracle apps. 
â€¢	Supports live migration, high availability, and templates. 
 
ðŸ”¹ Popular Hypervisors in the Market 
1.	VMware ESXi (vSphere) 
2.	Microsoft Hyper-V 
3.	KVM (Kernel-based Virtual Machine) 
4.	Xen 
5.	Oracle VM 
6.	VMware Workstation / Fusion 
7.	Proxmox VE 
Servers Used by Big Tech Companies â€“  
Big tech companies like Google, Amazon, Microsoft, Meta, Apple, and IBM use powerful and specialized server infrastructures to support their global services. Google designs its own energy-efficient servers and custom AI chips called TPUs to power services like Search, YouTube, and Gmail. Amazon Web Services (AWS) runs millions of servers worldwide using both standard x86 and custom Graviton processors, offering on-demand cloud infrastructure for companies like Netflix and NASA. Microsoft Azure uses both Windows and Linux servers across global data centers to support services like Office 365, Teams, and Xbox Cloud. Meta (Facebook) builds hyperscale data centers using open-source hardware from the Open Compute Project to handle huge amounts of social media and AI data. Apple operates secure, encrypted servers to support iCloud, Siri, and other ecosystem services with a focus on privacy and green energy. IBM uses powerful mainframes and cloud servers for industries like banking and healthcare, known for their enterprise-grade security and performance. 
 
 
Future Advancements in Servers- 
 
The future of servers is moving toward being faster, smarter, and greener. Servers will be optimized for AI and machine learning, using powerful GPUs and custom chips to handle large-scale data processing. Energy efficiency will be a major focus, with eco-friendly technologies like liquid cooling and low-power processors. The rise of edge computing will push servers closer to users for faster response times, essential for IoT and real-time applications. Serverless architecture will grow, allowing developers to run applications without managing server hardware. In addition, hyper-converged infrastructure (HCI) and software-defined technologies will make servers more flexible and easier to manage. Finally, servers will become more secure and intelligent, with built-in AI threat detection and self-healing capabilities to reduce downtime. 
 
 
 
 
 
 
 
 
 
 
 
How servers are related to HPCL
HPCL uses Nutanix servers. 
Nutanix is a leader in hyperconverged infrastructure (HCI)â€”a solution that combines compute, storage, and networking into a single, software-defined platform. Nutanix servers aren't hardware servers in the traditional sense; instead, Nutanix provides software (mainly the Nutanix Cloud Platform) that can run on standard x86 servers from major OEMs like Dell, HPE, Lenovo, and Supermicroâ€”or on Nutanix-branded hardware called NX series appliances.
________________________________________
ðŸš€ Key Components of Nutanix Servers
1. Acropolis Operating System (AOS)
â€¢	The core of Nutanix HCI.
â€¢	Manages storage, virtualization, and compute in a distributed fashion.
â€¢	Uses distributed storage fabric (DSF) for pooling and distributing data.
2. AHV (Acropolis Hypervisor)
â€¢	Nutanixâ€™s built-in KVM-based hypervisor.
â€¢	Included at no additional cost, offering a viable alternative to VMware ESXi or Microsoft Hyper-V.
3. Prism
â€¢	A sleek, intuitive management interface.
â€¢	Allows monitoring, scaling, automation, and troubleshooting with a single dashboard.
________________________________________
Features of Nutanix Servers
Feature	Description
Hyperconverged Architecture	Merges compute + storage + virtualization into one box.
Scalability	Start small, scale linearly by adding nodes. No forklift upgrades.
Fault Tolerance	Built-in redundancy and replication; survives node and disk failures.
Data Services	Includes deduplication, compression, snapshots, disaster recovery, and more.
Multi-Hypervisor Support	Supports AHV, VMware ESXi, and Hyper-V.
Cloud Integration	Offers hybrid and multi-cloud capabilities (via Nutanix Cloud Clusters - NC2).
Security	Built-in microsegmentation, data encryption, and STIG compliance.
________________________________________
Nutanix Hardware Options
Nutanix NX Series Appliances
â€¢	Designed, validated, and supported by Nutanix.
â€¢	Comes pre-installed with Nutanix software.
â€¢	Common models:
o	NX-1175S-G7: Entry-level for ROBO or edge.
o	NX-8155-G7: High-performance compute workloads.
o	NX-8035-G7: General-purpose mid-range node.
OEM Platforms (Lenovo, Dell EMC, HPE)
â€¢	Nutanix software can be installed on:
o	Lenovo ThinkAgile HX
o	Dell EMC XC Series
o	HPE DX appliances
â€¢	Gives customers flexibility to run Nutanix on familiar server brands.
________________________________________
Use Cases
â€¢	Data Center Modernization
â€¢	Virtual Desktop Infrastructure (VDI)
â€¢	Private Cloud & Hybrid Cloud
â€¢	Edge Computing
â€¢	Disaster Recovery
â€¢	AI/ML and Big Data workloads
________________________________________
Benefits
â€¢	Simplified Management: One-click upgrades and centralized control.
â€¢	Cost Efficiency: Lower total cost of ownership compared to legacy 3-tier systems.
â€¢	Performance: High-speed storage (NVMe, SSD), fast networking, and optimized workloads.
â€¢	Cloud-Like Agility: Build on-prem private clouds with public cloud-like flexibility.
â€¢	Fast Deployment: Turnkey appliances ready to deploy in hours, not days.
________________________________________
Nutanix vs Traditional Infrastructure
	Nutanix HCI	Traditional 3-Tier
Setup	Simple, integrated	Complex (SAN + Compute + Network)
Management	Unified via Prism	Separate tools per layer
Scalability	Linear, node-based	Expensive and disruptive
Cost	OpEx-friendly	CapEx-heavy
________________________________________
Nutanix in the Cloud Era
With Nutanix Cloud Clusters (NC2), Nutanix servers now extend into public clouds like AWS and Azure, allowing you to:
â€¢	Run Nutanix software natively on cloud infrastructure
â€¢	Lift-and-shift on-prem workloads to cloud seamlessly
â€¢	Create a unified hybrid cloud fabric with centralized management

Project: Digital Safety and Emergency Response System
Problem Statement
In large industrial refineries, safety depends on rapid access to accurate information and efficient emergency response. Manual search for safety protocols or emergency routes is slow and error-prone, especially during crises. This delay can lead to increased risk for personnel and assets.
The project addresses the problem of slow, manual access to safety manuals, protocols, and emergency routing by providing a digital, AI-driven solution that centralizes information and automates critical workflows.
Objectives & Scope
The primary objectives of the HPCL Emergency System are:
Enable instant AI-driven answers from safety manuals, reducing time to find critical information.
Optimize on-site evacuation and emergency response routes using real-time data.
Centralize all safety protocols, manuals, and incident reporting in a single digital repository.
Provide a real-time dashboard for monitoring incidents, KPIs, and safety trends.
Scope:
- AI-powered safety Q&A (chatbot)
- Optimized emergency routing (map-based)
- Centralized repository of safety protocols and manuals
- Real-time monitoring dashboard
- Incident reporting and log
Assumptions/limits: The system is designed for refinery environments, assumes digital access to safety documents, and currently supports PDF uploads and map-based routing within a predefined facility map.
Background Context
Major refiners worldwide are adopting AI and digital systems to improve safety and efficiency (see: ohsonline.com, aveva.com). Digital document management systems increase data accessibility and reliability, while AI-powered tools enable faster, more accurate decision-making. Semantic search and LLMs (Hugging Face, 2024) are now standard in advanced document Q&A systems. Map-based dashboards are widely used for situational awareness in emergency management (learn.arcgis.com).
System Architecture and Components
The HPCL Emergency System is composed of several modular components, each responsible for a key function:
Frontend (UI):
A web interface built with React + TypeScript, styled with CSS. Provides the user portal for all interactions, including chat-based queries, map-based routing, file uploads, and dashboard views. Uses Leaflet.js for interactive maps.
Backend API:
A Python Flask server that handles application logic. Receives user queries, processes file uploads (extracting text from PDFs with PyPDF2, cleaning with NLTK), manages incident logs, and serves as the main API for the frontend.
Semantic Search Engine:
Uses Sentence Transformers to convert document text into vector embeddings. These are indexed in a FAISS database for fast similarity search. When a user asks a question, the query is embedded and FAISS retrieves the most relevant passages (huggingface.co).
Conversational AI (LLM):
Google Gemini powers the natural-language Q&A. It takes the retrieved context and user question to generate a coherent answer, turning manual search into an AI-driven chatbot.
Emergency Routing Module:
Uses Leaflet.js to display the refinery map. Computes optimal routes between points using shortest-path algorithms (e.g., Dijkstra/A*), helping responders find the fastest path during emergencies (brainwareuniversity.ac.in).
Real-Time Dashboard:
A dashboard built with React visualizes ongoing safety information, including live incidents, KPIs, and map overlays. Provides situational awareness similar to Esri dashboards (learn.arcgis.com).
Data Storage and Middleware:
Uses FAISS for embedding storage, local filesystem or cloud for documents, and JSON/NoSQL for incident logs. Environment variables managed with dotenv.
Implementation Details and Workflow
The system is implemented as a pipeline of modular services:
1. Document Ingestion: Safety manuals (PDFs) are uploaded via the UI. The backend extracts text with PyPDF2, preprocesses it (cleaning, tokenizing via NLTK), and saves both raw text and metadata.
2. Embedding and Indexing: Each document is split into passages, converted to embeddings using a Sentence Transformer, and added to a FAISS index for fast nearest-neighbor search (huggingface.co).
3. Query Processing: User questions are embedded and FAISS retrieves the top matching passages (semantic search).
4. Answer Generation: The retrieved passages and question are sent to Google Gemini, which generates a context-aware answer.
5. Routing Computation: For emergency directions, the frontend captures source/destination. The backend calculates the shortest path on a facility graph and returns the route.
6. Dashboard Updates: Incident reports are recorded in a database. The dashboard polls or subscribes to updates, refreshing the UI with current incident counts and locations.
Each step is modular, allowing for future extension and maintenance.
Key Features and Functionality
AI-Powered Safety Q&A: Users can type safety or emergency-related questions and receive instant answers from uploaded manuals, leveraging LLMs for speed and accuracy.
Semantic Document Search: Returns relevant excerpts from safety protocols using embedding-based search (huggingface.co).
Interactive Emergency Routing: Users select points on a map to compute the shortest/safest path, using GIS/mapping APIs (brainwareuniversity.ac.in).
Incident Reporting and Log: Users submit incident reports, which are stored for analysis and follow-up.
Real-Time Monitoring Dashboard: Live dashboard shows open incidents, locations, and trends, integrating real-time data with maps (learn.arcgis.com).
Centralized Knowledge Repository: All safety manuals, SOPs, and emergency contacts are accessible in one place, improving data reliability (aveva.com).
Deployment, Testing, and Maintenance
Hosting: Frontend is deployed on Vercel; Flask API runs on a cloud server with Gunicorn/Nginx. CORS is configured for secure API access. Environment variables (dotenv) manage API keys and URIs.
Testing: Unit tests for key functions (e.g., route-finding), and manual testing for Q&A accuracy. Known questions are used to verify chatbot responses.
Documentation: Includes in-app help, README, and user guide for future users and developers.
Future Work: Potential extensions include new sensor integrations, offline mode, or additional AI models. Robust deployment and maintenance are essential for reliability (aveva.com, ohsonline.com). AI-assisted automation is a key trend in industrial safety (ohsonline.com).

